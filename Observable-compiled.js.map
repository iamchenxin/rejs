{"version":3,"sources":["Observable.js"],"names":[],"mappings":"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","file":"Observable-compiled.js","sourcesContent":["ï»¿\"use strict\"; \r\n\r\nfunction OBSERVER_EXCEPTION(message) {\r\n    this._message = message;\r\n    this.name = \"OBSERVER_EXCEPTION\";\r\n\r\n}\r\n\r\nclass _OpNode\r\n{\r\n    constructor(parent, func) {\r\n        this._parent = parent;\r\n        this._children = [];\r\n\r\n        this._func = func;\r\n        this._refCount = 0;\r\n    }\r\n\r\n    static _Create(func) {\r\n        return new Operators(null, func);\r\n    }\r\n\r\n    _CreateChild(func) {\r\n        let newNode = new Operators(this, func);\r\n        this._children.push(newNode);\r\n        return newNode;\r\n    }\r\n\r\n    static _InitRoot(rootToThisChain) {\r\n        let root = rootToThisChain[0];\r\n        if (root instanceof Creations) {\r\n            if (root._inPlace) {\r\n                root._InitFunc(root);\r\n            }\r\n        }\r\n    }\r\n\r\n// ------------\r\n    _ThisToRoot(action){ // action(node)\r\n        let node = this;\r\n        do{\r\n            action(node);\r\n            node = node._parent;\r\n        }while (node != null);\r\n    }\r\n\r\n    _IfRoot(){\r\n        if(this._parent==null){\r\n            return this;\r\n        }\r\n    }\r\n    _RefToRoot(refv=1){\r\n        this._ThisToRoot(node=>node._refCount+=refv);\r\n    }\r\n    _UnRefToRoot() {\r\n        return this._RefToRoot(-1);\r\n    }\r\n    _BuildRootToThisChain(){\r\n        let thisToRootChain = [];\r\n        let cloneNode=null;\r\n        this._ThisToRoot(node=> thisToRootChain.push(node));\r\n\r\n        thisToRootChain.reverse();\r\n        let rootToThisChain = [];\r\n        let tmpNode =null;\r\n        for(let node of thisToRootChain){\r\n            tmpNode = node._ShallowClone(tmpNode);\r\n            tmpNode._refCount+=1;\r\n            rootToThisChain.push(tmpNode);\r\n        }\r\n        return rootToThisChain;\r\n    }\r\n    _GetRoot(){\r\n        let root=null;\r\n        this._ThisToRoot(node=>{\r\n            root=node._IfRoot();\r\n        });\r\n        return root;\r\n    }\r\n// <<< ---\r\n\r\n\r\n    _Subscribe(func, InitRoot = true) {\r\n        let child = this._CreateChild(func);\r\n\r\n        let root=null;\r\n        child._ThisToRoot(node=>{\r\n            node._refCount+=1;\r\n            root=node._IfRoot();\r\n        });\r\n\r\n        if (InitRoot) {\r\n            _OpNode._InitRoot(child._BuildRootToThisChain());\r\n        }\r\n        return child;\r\n    }\r\n\r\n    _UnSubscribe() {\r\n        this._UnRefToRoot();\r\n        return null;\r\n    }\r\n\r\n    _Excute(inarg) {\r\n        if (this._refCount == 0) return;\r\n\r\n        let arg = this._func(inarg);\r\n        for (let child of this._children) {\r\n            child._Excute(arg);\r\n        }\r\n    }\r\n\r\n    // Transforming base\r\n    _Op_Transform(func) {\r\n        return this._CreateChild(func);\r\n    }\r\n\r\n\r\n}\r\n\r\nclass Operators extends _OpNode\r\n{\r\n    _ShallowClone(parent){\r\n        let node =new Operators(parent, this._func);\r\n        if(parent){parent._children[0]=node;}\r\n        return  node;\r\n    }\r\n\r\n    Subscribe(func) {\r\n        return this._Subscribe(func);\r\n    }\r\n\r\n    UnSubscribe() {\r\n        return this._UnSubscribe();\r\n    }\r\n\r\n    Map(func) {\r\n        return this._Op_Transform(func);\r\n    }\r\n\r\n    Update(value) {\r\n        let root = this._GetRoot();\r\n        root._Excute(value);\r\n    }\r\n\r\n    UpdateMe(value) {\r\n        let rootToThisChain = this._BuildRootToThisChain(); // make a clone path leaf to root\r\n        let root = rootToThisChain[0];\r\n        root._Excute(value);\r\n    }\r\n\r\n}\r\n\r\n\r\n// all Creations are static ,there are factory\r\nclass Creations extends Operators {\r\n\r\n    constructor(parent, func, InitFunc, inPlace=true) {\r\n        super(parent, func);\r\n\r\n        this._InitFunc = InitFunc;\r\n        this._inPlace = inPlace;\r\n    }\r\n    _ShallowClone(parent){\r\n        let node = new Creations(parent,this._func,this._InitFunc,this._inPlace);\r\n        if(parent){parent._children[0]=node;}\r\n        return  node;\r\n    }\r\n\r\n    static InPlace(inPlaceFunc) {\r\n        return new Creations(null, v=> v, inPlaceFunc);\r\n    }\r\n\r\n    static Init(func) {\r\n        return new Creations(null, func, null, false);\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nclass Observer extends Operators {\r\n\r\n    constructor(parent, func) {\r\n        super(parent, func);\r\n        this._subscriptions = [];\r\n        if (parent) {\r\n            this._subscriptions.push(parent);\r\n        }\r\n    }\r\n\r\n    SubscribeTo(operator, func = null) {\r\n        if (func == null) {\r\n            if (this._func != null) {\r\n                func = this._func;\r\n            } else {\r\n                throw new OBSERVER_EXCEPTION(\"the func of observer should not be null\");\r\n            }\r\n        } \r\n    //CONTINOUS\r\n      //  operator.Subscribe();\r\n    }\r\n\r\n}\r\n\r\nexports.Operators = Operators;\r\nexports.Creations = Creations;\r\nexports.Observer = Observer;"]}