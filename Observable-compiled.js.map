{"version":3,"sources":["Observable.js"],"names":[],"mappings":"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","file":"Observable-compiled.js","sourcesContent":["ï»¿\"use strict\"; \r\n\r\nfunction OBSERVER_EXCEPTION(message) {\r\n    this._message = message;\r\n    this.name = \"OBSERVER_EXCEPTION\";\r\n\r\n}\r\n\r\nclass _OpNode\r\n{\r\n    constructor(parent, func) {\r\n        this._parent = parent;\r\n        this._children = new Array();\r\n\r\n        this._func = func;\r\n        this._refCount = 0;\r\n    }\r\n\r\n    static _Create(func) {\r\n        return new Operators(null, func);\r\n    }\r\n\r\n    _CreateChild(func) {\r\n        let newNode = new Operators(this, func);\r\n        this._children.push(newNode);\r\n        return newNode;\r\n    }\r\n\r\n    _CheckRoot(root) {\r\n        if (root instanceof Creations) {\r\n            if (root._inPlace) {\r\n                root._inPlaceInit(root);\r\n            }\r\n        }\r\n    }\r\n\r\n    _LeafTraceToRoot(refCount, buildChain = true) {\r\n        let node = this;\r\n        let leafToRootChain = [];\r\n\r\n        do {\r\n            if (buildChain) { leafToRootChain.push(node); }\r\n\r\n            node._refCount += refCount;\r\n            node = node._parent;\r\n        } while (node != null);\r\n        return leafToRootChain;\r\n    }\r\n\r\n    _LeafToRoot(action){\r\n        let node = this;\r\n        do{\r\n            action(node);\r\n            node = node._parent;\r\n        }while (node != null);\r\n    }\r\n\r\n    _RefToRoot2(refv=1){\r\n        _LeafToRoot(node=>node._refCount+=refv);\r\n    }\r\n\r\n    _RefToRoot() {\r\n        return this._LeafTraceToRoot(1);\r\n    }\r\n\r\n    _UnRefToRoot() {\r\n        return this._LeafTraceToRoot(-1);\r\n    }\r\n\r\n    _Subscribe(func, checkRoot = true) {\r\n        let child = this._CreateChild(func);\r\n        let leafToRootChain = child._RefToRoot();\r\n\r\n        if (checkRoot) {\r\n            let rootToLeafChain = this._RootToLeafChain(leafToRootChain);\r\n            this._CheckRoot(rootToLeafChain[0]);\r\n        }\r\n        return child;\r\n    }\r\n\r\n    _UnSubscribe() {\r\n        this._UnRefToRoot();\r\n        return null;\r\n    }\r\n\r\n    _Excute(inarg) {\r\n        if (this._refCount == 0) return;\r\n\r\n        let arg = this._func(inarg);\r\n\r\n        for (let child of this._children) {\r\n            child._Excute(arg);\r\n        }\r\n    }\r\n\r\n    _RootToLeafChain(leafToRootChain){\r\n        let rootToLeafChain = [];\r\n\r\n        leafToRootChain.reverse();\r\n        let node = leafToRootChain[0].ShallowClone(null);\r\n        node._refCount+=1;\r\n        rootToLeafChain.push(node);\r\n        for (let i = 1; i < leafToRootChain.length ; i++) {\r\n            node = leafToRootChain[i].ShallowClone(node);\r\n            node._refCount+=1;\r\n            rootToLeafChain.push(node);\r\n        }\r\n        return rootToLeafChain;\r\n    }\r\n\r\n    // Transforming base\r\n    _Op_Transform(func) {\r\n        return this._CreateChild(func);\r\n    }\r\n\r\n\r\n}\r\n\r\nclass Operators extends _OpNode\r\n{\r\n\r\n    Subscribe(func) {\r\n        return this._Subscribe(func);\r\n    }\r\n\r\n    UnSubscribe() {\r\n        return this._UnSubscribe();\r\n    }\r\n\r\n    Map(func) {\r\n        return this._Op_Transform(func);\r\n    }\r\n\r\n\r\n    Update(value) {\r\n        let leafToRoot = this._LeafTraceToRoot(0);\r\n        leafToRoot[leafToRoot.length-1]._Excute(value);\r\n    }\r\n\r\n    UpdateMe(rootToLeafChain=[]) {\r\n        if(rootToLeafChain==false){\r\n\r\n          //  rootToLeafChain =\r\n        }\r\n    }\r\n\r\n\r\n    UpdateAll() {\r\n\r\n    }\r\n\r\n    ShallowClone(parent){\r\n        let node =new Operators(parent, this._func);\r\n        if(parent){parent._children[0]=node;}\r\n        return  node;\r\n    }\r\n\r\n}\r\n\r\nclass RootToLeafChain extends Operators {\r\n\r\n    constructor(leafToRootChain) {\r\n        super(null, null);\r\n        this._rootToLeafChain = [];\r\n\r\n        leafToRootChain.reverse();\r\n        let node = leafToRootChain[0].ShallowClone(null);\r\n        this._rootToLeafChain.push(node);\r\n        for (let i = 1; i < leafToRootChain.length ; i++) {\r\n            node = leafToRootChain[i].ShallowClone(node);\r\n            this._rootToLeafChain.push(node);\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n// all Creations are static ,there are factory\r\nclass Creations extends Operators {\r\n\r\n    constructor(parent, func, inPlaceInit, inPlace=true) {\r\n        super(parent, func);\r\n\r\n        this._inPlaceInit = inPlaceInit;\r\n        this._inPlace = inPlace;\r\n    }\r\n\r\n    static InPlace(inPlaceFunc) {\r\n        return new Creations(null, v=> v, inPlaceFunc);\r\n    }\r\n\r\n    static Init(func) {\r\n        return new Creations(null, func, null, false);\r\n    }\r\n\r\n    ShallowClone(parent){\r\n        let node = new Creations(parent,this._func,this._inPlaceInit,this._inPlace);\r\n        if(parent){parent._children[0]=node;}\r\n        return  node;\r\n    }\r\n}\r\n\r\nclass Observer extends Operators {\r\n\r\n    constructor(parent, func) {\r\n        super(parent, func);\r\n        this._subscriptions = [];\r\n        if (parent) {\r\n            this._subscriptions.push(parent);\r\n        }\r\n    }\r\n\r\n    SubscribeTo(operator, func = null) {\r\n        if (func == null) {\r\n            if (this._func != null) {\r\n                func = this._func;\r\n            } else {\r\n                throw new OBSERVER_EXCEPTION(\"the func of observer should not be null\");\r\n            }\r\n        } \r\n    //CONTINOUS\r\n      //  operator.Subscribe();\r\n    }\r\n\r\n}\r\n\r\nexports.Operators = Operators;\r\nexports.Creations = Creations;\r\nexports.Observer = Observer;"]}